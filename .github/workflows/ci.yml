name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  lint-and-typecheck:
    name: Lint & typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: ESLint
        run: yarn lint

      - name: TypeScript check
        run: yarn type-check

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test:coverage
        env:
          IPLOCATE_API_KEY: ${{ secrets.IPLOCATE_API_KEY }}

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Check build output
        run: |
          ls -la dist/
          node -e "console.log(require('./dist/cjs/index.js'))"
          node -e "import('./dist/esm/index.mjs').then(m => console.log(m))"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  validate-examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test TypeScript example
        run: |
          cd examples
          npx tsx typescript-usage.ts --dry-run || echo "Example validation (expected to fail without API key)"
        env:
          IPLOCATE_API_KEY: ${{ secrets.IPLOCATE_API_KEY }}

      - name: Test JavaScript example
        run: |
          cd examples
          node basic-usage.js --dry-run || echo "Example validation (expected to fail without API key)"
        env:
          IPLOCATE_API_KEY: ${{ secrets.IPLOCATE_API_KEY }}
